# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

#####################################################################
#	KlackEnder- Macros
#####################################################################

[gcode_macro PROBE_OUT]
gcode:
    G90
    G1 X245 F4000
    G4 P300
    G1 Z15
    G1 X0

[gcode_macro PROBE_IN]
gcode:
    G90
    G1 Z20
    G1 X245 F20000
    G1 Y-8 #Check this against your config of [stepper_y] position_min: ...!
    G1 Z0
    G4 P300
    G1 X220 F6000
    G1 Z10
    G1 X0

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: _BED_MESH_CALIBRATE
gcode:
  PROBE_OUT
  _BED_MESH_CALIBRATE ADAPTIVE=1
  PROBE_IN

[gcode_macro G29]
gcode:
    PROBE_OUT
    BED_MESH_CALIBRATE ADAPTIVE=1
    #G1 Y0 F20000
    PROBE_IN

[gcode_macro PROBE_CALIBRATE]
rename_existing: _PROBE_CALIBRATE
gcode:
    {% if not 'xyz' in printer.toolhead.homed_axes %}
    G28
    {% endif %}
    PROBE_OUT
    G90
    G1 Z20
    G1 X115 Y115 F20000
    _PROBE_CALIBRATE
    TESTZ Z=20
    M117 Remove the Klack to continue calibration!

[gcode_macro PROBE_ACCURACY]
rename_existing: _PROBE_ACCURACY
gcode:
    {% if not 'xyz' in printer.toolhead.homed_axes %}
    G28
    {% endif %}
    PROBE_OUT
    G90
    G1 Y115 X115 F20000
    _PROBE_ACCURACY
    PROBE_IN


# gcode_macro _HOME_X]
# gcode:
#     # Always use consistent run_current on A/B steppers during sensorless homing
#     {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
#     {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
#     {% set HOME_CURRENT = 0.4 %}
#     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
#     SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

#     # Home
#     G28 X
#     # Move away
#     G91
#     G1 X-10 F1200

#     # Wait just a second… (give StallGuard registers time to clear)
#     G4 P1000
#     # Set current during print
#     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
#     SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

# [gcode_macro _HOME_Y]
# gcode:
#     # Set current for sensorless homing
#     {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
#     {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
#     {% set HOME_CURRENT = 0.4 %}
#     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
#     SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

#     # Home
#     G28 Y
#     # Move away
#     G91
#     G1 Y-10 F1200

#     # Wait just a second… (give StallGuard registers time to clear)
#     G4 P1000
#     # Set current during print
#     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
#     SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}